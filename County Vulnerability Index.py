# -*- coding: utf-8 -*-
"""
Created on Wed May  1 23:13:26 2024

@author: aas0041
"""

import pandas as pd

# Load the data from Excel
data = pd.read_excel('C:/Users/aas0041/Desktop/590 Project/vulnerability_data.xlsx', header=[0, 1])


# Keep a copy of the original headers for printing later
original_headers = data.columns.to_frame(index=False)

# Flatten the headers for processing
data.columns = [' '.join(col).strip() for col in data.columns.values]

# Set the first column (County names) as the index
data.set_index(data.columns[0], inplace=True)

# Rank the entries for each variable
ranked_data = data.rank(method='min', ascending=True)

# Calculate percentile ranks
N = ranked_data.shape[0]  # Total number of entries in each column
percentile_ranks = (ranked_data - 1) / (N - 1)

# Identify columns for each theme to aggregate
theme1_cols = [col for col in percentile_ranks.columns if 'THEME 1' in col]
theme2_cols = [col for col in percentile_ranks.columns if 'THEME 2' in col]
theme3_cols = [col for col in percentile_ranks.columns if 'THEME 3' in col]
theme4_cols = [col for col in percentile_ranks.columns if 'THEME 4' in col]

# Compute the sum of percentile ranks for each theme
percentile_ranks['Theme1_Index'] = percentile_ranks[theme1_cols].sum(axis=1)
percentile_ranks['Theme2_Index'] = percentile_ranks[theme2_cols].sum(axis=1)
percentile_ranks['Theme3_Index'] = percentile_ranks[theme3_cols].sum(axis=1)
percentile_ranks['Theme4_Index'] = percentile_ranks[theme4_cols].sum(axis=1)

# Rank the theme index columns
theme_indices = ['Theme1_Index', 'Theme2_Index', 'Theme3_Index', 'Theme4_Index']
theme_rankings = percentile_ranks[theme_indices].rank(method='min', ascending=True)

# Calculate percentile ranks for theme index columns
for column in theme_indices:
    percentile_ranks[column + '_Rank'] = theme_rankings[column]
    percentile_ranks[column + '_Percentile'] = (theme_rankings[column] - 1) / (N - 1)

# Compute the sum of Theme Index Percentiles to create an "Overall Index"
percentile_columns = [col + '_Percentile' for col in theme_indices]
percentile_ranks['Overall_theme_Index'] = percentile_ranks[percentile_columns].sum(axis=1)

# Rank and calculate percentile for Overall Index
percentile_ranks['Overall_theme_Index_Rank'] = percentile_ranks['Overall_theme_Index'].rank(method='min', ascending=True)
percentile_ranks['Overall_vulnerability_Index'] = (percentile_ranks['Overall_theme_Index_Rank'] - 1) / (N - 1)

# Reset the index to bring the county names back as a column
percentile_ranks.reset_index(inplace=True)

# Save the ranked data and theme indices to a new Excel file
percentile_ranks.to_excel('County Vulnerability Index .xlsx', index=False)

# Print the original headers
print("Headers:")
print(original_headers)

# Print the percentile ranks with theme indices and their rankings
print("\nComplete vulnerability index Rankings:")
print(percentile_ranks)
